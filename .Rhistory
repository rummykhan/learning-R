tmp <- x[x == NA]
tmp
length(tmp)
length(x[x == NA])
x
x
tmp
Ozone <- read.csv(file='quiz-1/hw1.csv', colClasses = c(NA, 'NULL','NULL','NULL','NULL','NULL'))
Ozone
length(Ozone[Ozone==NA])
Ozone
x
Ozone
Ozone[0]
Ozone[1]
Ozone[o]
Ozone[0]
frame = Ozone
frame
getClass(frame)
class(frame)
dim(frame)
dimnames(frame)
col = frame[1]
col
class(col)
col
col[0]
col[1]
Ozone <- read.csv(file='quiz-1/hw1.csv')[,1]
Ozone
len(Ozone)
length(Ozone)
Ozone[Ozone==NA]
length(Ozone[Ozone==NA])
Ozone
Ozone
Ozone[45]
Ozone[46]
Ozone[0]
Ozone[1]
Ozone[2]
Ozone[3]
tmp = Ozone[Ozone == NA]
tmp
length(tmp)
Ozone
for i in Ozone:
for (val in Ozone){}
for (val in Ozone){ print(val) }
counter = 0
for (val in Ozone){ counter++ }
for (val in Ozone){ counter = counter+1; }
counter
for (val in Ozone){ if( val == NA ) counter = counter+1; }
for (val in Ozone){ if( val ) counter = counter+1; }
for (val in Ozone){ if( val === NA ) counter = counter+1; }
for (val in Ozone){ if( is.na(val) ) counter = counter+1; }
counter
counter = 0
for (val in Ozone){ if( is.na(val) ) counter = counter+1; }
counter
Ozone
class(Ozone)
is.array(Ozone)
is.list(Ozone)
is.integer(Ozone)
mean(Ozone)
which( !is.na(Ozone) )
notNA = which( !is.na(Ozone) )
notNA
len(notNA)
length(notNA)
mean(notNA)
areNA = which( is.na(Ozone) )
areNA
notNA
areNA = which( is.na(Ozone), arr.ind=TRUE )
areNA
notNA = which( !is.na(Ozone), arr.ind=TRUE )
notNA
vector1 = c(Ozone)
vector1
notNA = which( !is.na(Ozone) )
notNA
notNA = !is.na(Ozone)
notNA
notNA = which( !is.na(Ozone) )
notNA = which( !is.na(Ozone) )
x = list()
x
class(x)
Ozone
Ozone <- read.csv(file='quiz-1/hw1.csv')
Ozone
table <- read.csv(file='quiz-1/hw1.csv')
table
Ozone = table[['Ozone']]
Ozone
class(Ozone)
tmp = Ozone
tmp
tmp <- Ozone[!is.na(Ozone)]
tmp
len(tmp)
length(tmp)
tmp <- Ozone[is.na(Ozone)]
length(tmp)
tmp <- Ozone[!is.na(Ozone)]
mean(tmp)
table
tmp <- list(table)
tmp
tmp[['Ozone', 'Temp']]
tmp[['Ozone'],['Temp']]
tmp
tmp['Ozone']
tmp[['Ozone']]
tmp
table[['Ozone']]
table[['Ozone'],['Temp']]
table[['Ozone','Temp']]
table
tmp = subset(table)
tmp
tmp = subset(table, (table[['Ozone']]))
tmp = subset(table, (is.na(table[['Ozone']])))
tmp
tmp = subset(table, (is.na(table)))
tmp
x <- list(read.csv('quiz-1/hw1.csv'))
x
x[1]
x[[1]]
x[1]
x$Ozone
x[['Ozone']]
x
x[1]
x[1][0]
x[['Ozone']]
x[[0]]
csv <- read.csv('quiz-1/hw1.csv')
csv
csv <- read.csv('quiz-1/hw1.csv')[1]
csv
csv <- read.csv('quiz-1/hw1.csv')
col1 = csv[1]
col1
col1 != NA
col1
class(col1)
col1
col1 <- list(col1)
col1
class(col1)
col1 <- array(col1)
col1
class(col1)
csv
dimnames(csv)
x <- list(foo=1:4, bar=1:9)
x
x$foo
x$bar
x['foo']
x['bar']
dir()
str(csv)
csv$Ozone
summary(csv)
csv
class(csv)
tmp <- csv[1,]
tmp
tmp <- csv[,1]
tmp
tmp <- csv[,1][csv$Ozone!== NA]
tmp
tmp <- csv[,1][ csv$Ozone !== NA ]
tmp <- csv[,1]
tmp <- csv[,1][,2]
tmp <- csv[,1,2]
tmp
tmp <- csv[,1]
csv
apply(csv, 1, function(x)sum(x>30))
apply(csv, 1, function(x)sum(x!==NA))
apply(csv, 1, function(x)sum(!is.na(x)))
apply(csv, 2, function(x)sum(!is.na(x)))
apply(csv, 3, function(x)sum(!is.na(x)))
apply(csv, 4, function(x)sum(!is.na(x)))
dir()
csv = scan("quiz-1/hw1.csv")
csv = scan("quiz-1/hw1.csv", header=F)
csv = scan("quiz-1/hw1.csv", header=FALSE)
csv = scan("quiz-1/hw1.csv", head=FALSE)
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
x<1:4
x <- 1:4
y <- 2:3
x+y
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
z <- rbind(x,y)
z
install.packages("swirl")
packageVersion('swirl')
insta__from_swirl('R Programming')
insta_from_swirl('R Programming')
install_from_swirl('R Programming')
library('swirl')
install_from_swirl('R Programming')
swirl()
5+7
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
tmp <- c(1,2,3,4) + c(0, 10)
tmp
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 100
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir = cwd()
old.dir = getcwd()
old.dir = getwd()
old.dir <- getwd()
dir.create('testdir')
setwd('testdir')
file.create('mytest.R')
dir()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.R')
file.path('mytest3.R')
file.path
file.path('folder1')
file.path('folder1', 'folder2')
?dir.create
file
dir.create(file.path('testdir2/testdir3'), recursive = T)
dir.create(file.path('testdir2','testdir3'), recursive = T)
dir.create(file.path('testdir2','testdir3'), recursive = T)
dir.create(file.path('testdir2', 'testdir3'), recursive = T)
dir.create(file.path('testdir2', 'testdir3'), recursive = T)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
old.dir
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char = c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Rehan Manzoor")
my_name <- c(my_char, "Rehan Manzoor")
my_name
my_name <- paste(my_name, collapse = " ")
my_name <- c(my_char, "Rehan Manzoor")
paste(my_name, collapse = " ")
paste("Hello", "World", sep=" ")
paste("Hello", "World!", sep=" ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c('X', 'Y', 'Z'), sep="")
paste(LETTERS, 1:4, sep="")
paste(LETTERS, 1:4, sep="-")
paste(LETTERS, 1:4, sep="-")
paste(1:4, LETTERS, sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
class(4L)
class(4)
my_data
my_data/0
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x[5],x[6],x[7])
x[c(5,6,7)]
info
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, nofr=NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c('foo', 'bar', 'norf')
identical(vect, vect2)
vect['bar']
vect[c('foo', 'bar')]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patient <- c('Bill', 'Gina', 'Kelly', 'Sean')
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
my_vector
cbind(patients, my_vector)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c('patient', 'age', 'weight', 'bp', 'rating', 'test')
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE ) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4  > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints, ints > 7)
?which
which(ints[x>7])
ints
ints > 7
which(ints > 7)
any(ints > 0)
any(ints < 0)
all(ints > 0)
my_vector[1:20]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
my_matrix2
identical(my_matrix, my_matrix2)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c('patient', 'age', 'weight', 'bp', 'rating', 'test')
?colnames
colnames(my_data) <- cnames
my_data
info
info()
main()
main()
x
x[1:0]
x
x[1:10]
main()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6,7.9,8.8))
evalute(function(x){x+1}, 6)
evalute(sum, c(1,2))
evaluate(sum, c(1,2))
evaluate(function(x){x+1}, 6)
evaluate(function(x){return(x[1])}, c(8,4,0))
evaluate(function(x){return(tail(x[length(x)])}, c(8,4,0))
evaluate(function(x){return(tail(x[length(x)])}, c(8,4,0)))
evaluate(function(x){ return(tail(x[length(x)])) }, c(8,4,0)))
evaluate(function(x){ return( x[2] ) }, c(8,4,0)))
evaluate(function(x){ return( x[2] ) }, c(8,4,0))
evaluate(function(x){ return( tail(x, n=1) ) }, c(8,4,0))
?paste
paste('Programming', 'is', 'fun')
paste('Programming', 'is', 'fun!')
submit()
telegram('how', 'are', 'you?')
submit()
submit()
mad_libs(place='omaha', adjective="good", noun="Rehan")
submit()
'I'%p%'love'%p%'R!'
d1 <- Sys.Date()
d1
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units='days')
getwd()
ls
ls()
dir()
exit()
